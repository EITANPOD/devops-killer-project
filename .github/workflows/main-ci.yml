name: CI

on:
  push:
    branches:
      - dev
      - main
      - staging
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the application repository
      - uses: actions/checkout@v4

      # Step 2: Run Docker Compose
      # - name: Run Docker Compose
      #   run: docker compose up -d

      # - name: Wait for Services to Start
      #   uses: GuillaumeFalourd/wait-sleep-action@v1
      #   with:
      #     time: '15'

      # - name: Test Application with curl
      #   run: curl http://localhost:80

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 992382853618.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 3: Build and Push Docker Images
      - name: Get the latest commit SHA
        id: git-info
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            992382853618.dkr.ecr.us-east-1.amazonaws.com/eitan/project:frontend-${{ env.sha }}

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            992382853618.dkr.ecr.us-east-1.amazonaws.com/eitan/project:backend-${{ env.sha }}

      - name: Login to GitHub
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Step 4: Clone GitOps Repository
      - name: Clone GitOps Repository
        run: |
          cd /home/runner/work/
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/EITANPOD/devops-killer-gitOps.git
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Step 5: Update the Values File for the Correct Environment
      - name: Update Values File
        run: |
          cd devops-killer-gitOps/environments/

          if [[ "${{ github.ref_name }}" == "main" ]]; then
            env_dir="dev"
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            env_dir="staging"
          elif [[ "${{ github.ref_name }}" == "prod" ]]; then
            env_dir="production"
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            env_dir="dev"
          fi

          sed -i "s|tag: frontend-.*|tag: frontend-${{ env.sha }}|" $env_dir/values.yaml
          sed -i "s|tag: backend-.*|tag: backend-${{ env.sha }}|" $env_dir/values.yaml

      # Step 6: Commit and Push Changes to GitOps Repository
      - name: Commit and Push Changes
        run: |
          cd /home/runner/work/devops-killer-gitOps/
          git add .
          git commit -m "Update image tags for ${{ github.ref_name }} to ${{ env.sha }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}