apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: {{ .Values.backend.appname }}
    {{- include "library.labels" . | nindent 4 }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
      {{- include "library.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: backend
        {{- include "library.labels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Values.backend.appname }}
        image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_ENV
          value: "development"
        - name: SQLALCHEMY_DATABASE_URI
          value: "postgresql://username:password@db:5432/recipes_db"
        volumeMounts:
        - name: {{ .Values.backend.appname }}-volume
          mountPath: /app
        resources: {}

      - name: postgres
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "username"
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: POSTGRES_DB
          value: "recipes_db"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: {{ .Values.backend.appname }}-volume
        hostPath:
          path: ./backend
          type: Directory
      - name: postgres-storage
        emptyDir: {}
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.backend.appname }}-service
spec:
  selector:
    app: {{ .Values.backend.appname }}
    {{- include "library.labels" . | nindent 4 }}
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
